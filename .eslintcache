[{"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\index.js":"1","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\App.js":"2","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\Sidebar.js":"4","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\SidebarChat.js":"5","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\Chat.js":"6","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\firebase.js":"7","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\Login.js":"8","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\StateProvider.js":"9","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\reducer.js":"10"},{"size":689,"mtime":1608578350485,"results":"11","hashOfConfig":"12"},{"size":933,"mtime":1608579782038,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2164,"mtime":1608653245064,"results":"15","hashOfConfig":"12"},{"size":1532,"mtime":1608661011191,"results":"16","hashOfConfig":"12"},{"size":3829,"mtime":1608656658836,"results":"17","hashOfConfig":"12"},{"size":1387,"mtime":1608235253980,"results":"18","hashOfConfig":"12"},{"size":1125,"mtime":1608579801641,"results":"19","hashOfConfig":"12"},{"size":385,"mtime":1608579641741,"results":"20","hashOfConfig":"12"},{"size":484,"mtime":1608577518769,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1fbk5iw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\index.js",[],["49","50"],"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\App.js",["51","52"],"import './App.css';\nimport Sidebar from './Sidebar'\nimport Chat from './Chat'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n          <div className=\"app__body\">\n\n            {/* Router */}\n            <Router>\n              {/* Side bar */}\n              <Sidebar />\n              <Switch>\n                <Route path=\"/rooms/:roomId\" >\n                  {/* Chat messages */}\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  {/* Chat messages */}\n                  <Chat />\n                </Route>\n              </Switch>\n            </Router>\n\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\Sidebar.js",["53","54"],"import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport { Avatar, IconButton, Slide } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n\r\n    useEffect(() => {\r\n      const unsubscribe =  db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n            setRooms(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            }))\r\n            )\r\n        );\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL} />\r\n                {/* Sidebar header right */}\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map((room) => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\SidebarChat.js",[],"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\Chat.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport './Chat.css'\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, SearchOutlined, MoreVert } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat() {\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection(\"rooms\")\r\n                .doc(roomId)\r\n                .onSnapshot((snapshot) => setRoomName\r\n                    (snapshot.data().name));\r\n\r\n\r\n            db.collection(\"rooms\").doc(roomId)\r\n                .collection(\"messages\").orderBy('timestamp', 'asc')\r\n                .onSnapshot(snapshot => (\r\n                    setMessages(\r\n                        snapshot.docs.map(doc => doc.data())\r\n                    )))\r\n        }\r\n    }, [roomId]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n\r\n    }, [roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"Its working+++>>>\");\r\n\r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\")\r\n            .add({\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n\r\n\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat__headerinfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>last seen{\"\"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat__message ${message.name === user.displayName && 'chat__reciver'}`}>\r\n                        <span className=\"chat__name\">\r\n                            {message.name}\r\n                        </span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder='Type a message' type=\"text\" />\r\n                    <button type='submit' onClick={sendMessage}>Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\firebase.js",[],["56","57"],"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\Login.js",["58","59","60"],"import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport {auth, provider} from './firebase'\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            })\r\n        })\r\n        .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__container'>\r\n                <img  src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png' />\r\n\r\n                <div className='login__text'>\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n                <button type='submit' onClick={signIn}>\r\n                    Sign in With Google\r\n            </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\StateProvider.js",[],"C:\\Users\\Nooh\\Desktop\\whatsapp-clone\\src\\reducer.js",["61"],"import { act } from \"react-dom/test-utils\";\r\n\r\nexport const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":50,"nodeType":"68","messageId":"69","endLine":4,"endColumn":54},{"ruleId":"66","severity":1,"message":"70","line":9,"column":20,"nodeType":"68","messageId":"69","endLine":9,"endColumn":28},{"ruleId":"66","severity":1,"message":"71","line":3,"column":30,"nodeType":"68","messageId":"69","endLine":3,"endColumn":35},{"ruleId":"66","severity":1,"message":"70","line":15,"column":20,"nodeType":"68","messageId":"69","endLine":15,"endColumn":28},{"ruleId":"66","severity":1,"message":"70","line":18,"column":22,"nodeType":"68","messageId":"69","endLine":18,"endColumn":30},{"ruleId":"62","replacedBy":"72"},{"ruleId":"64","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},{"ruleId":"75","severity":1,"message":"76","line":9,"column":12,"nodeType":"77","messageId":"78","endLine":9,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":25,"column":17,"nodeType":"81","endLine":25,"endColumn":125},{"ruleId":"66","severity":1,"message":"82","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'Slide' is defined but never used.",["83"],["84"],"'Button' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'act' is defined but never used.","no-global-assign","no-unsafe-negation"]